{"version":3,"sources":["components/NavBar/NavBar.js","redux/actions/index.js","redux/actions/types.js","components/LoadingComponent.js","components/Carousel/Carousel.js","routes/Home/index.js","routes/Login/index.js","services/PostData.js","routes/Signup/index.js","routes/Register/index.js","routes/UserProfile/index.js","routes/Services/index.js","components/Footer/Footer.js","App.js","serviceWorker.js","redux/forms.js","redux/reducers/isLoggedIn.js","redux/reducers/signup.js","redux/reducers/register.js","redux/reducers/selectCategory.js","redux/reducers/index.js","index.js","assets/img/display-pics/user-avatar.png","assets/img/slider/slide1.jpg","assets/img/slider/slide2.jpg","assets/img/slider/slide3.jpg","assets/img/display-pics/dp-img.png","assets/img/social-media-icons/white/facebook-icon.png","assets/img/social-media-icons/white/twitter-icon.png","assets/img/social-media-icons/white/instagram-icon.png"],"names":["NavBar","isLogged","useSelector","state","isLoggedIn","dispatch","useDispatch","className","to","type","data-toggle","data-target","id","Nav","Link","as","NavLink","activeClassName","activeStyle","fontWeight","color","onClick","payload","message","Date","toString","Loading","Carousel","data-ride","role","height","src","slide1","alt","slide2","slide3","data-slide-to","arrayOfArrays","HomeComponent","props","togglePage","setState","page1","page2","fetchServiceCategories","spiltArray","serviceCatArr","length","arrElement","splice","push","handleClick","event","serviceCategoryId","target","getAttribute","selectCategory","history","handleChange","value","error","isLoading","serviceCat","bind","mmApiCall","data","setTimeout","console","log","this","onChange","defaultValue","hidden","map","item","key","name","charAt","toUpperCase","slice","image","Component","connect","validEmail","val","test","required","LoginComponent","handleLogin","values","userData","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","responseJSON","catch","result","alert","loginSuccess","loginReset","model","onSubmit","text","placeholder","validators","show","messages","checkbox","htmlFor","href","style","textDecoration","fontSize","actions","reset","unchecked","maxLength","len","SignupComponent","handleSubmit","signupSuccess","signupReset","minLength","withRouter","RegisterComponent","registerSuccess","registerReset","for","displayImg","file","accept","select","selected","disabled","UserProfile","userProfile","category","address","hours","days","www","bio","data-dismiss","action","avatar","ServiceListing","handleOnLoad","undefined","searchResult","fetchServicesByCatId","services","filteredItems","filter","a","serviceCategoryObjectId","width","webPagelink","contact","Footer","fbIcon","twitterIcon","igIcon","App","exact","path","component","Home","Login","Signup","Services","Register","Boolean","window","location","hostname","match","LoginInitialStates","userEmail","SignupInitialStates","userPassword","RegisterInitialStates","img","firstname","lastname","dob","ssn","email","tel","addressline","city","zipcode","country","servicecategory","firstday","lastday","openingtime","closingtime","isloggedInReducer","signup","register","initialStates","selectedCategory","allReducers","combineReducers","createForms","login","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"oPAgJeA,EAxIA,WAEb,IAAMC,EAAWC,uBAAY,SAACC,GAAD,OAAWA,EAAMC,cAGxCC,EAAWC,wBAEjB,OACE,yBAAKC,UAAU,qDAEb,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,KACnC,6CAEF,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,WAEZ,0BAAMJ,UAAU,yBAIlB,yBAAKA,UAAU,2BAA2BK,GAAG,UAC3C,wBAAIL,UAAU,sBACXN,GACC,4BACE,0BAAMM,UAAU,YAAhB,iBAGJ,wBAAIA,UAAU,YACZ,kBAACM,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,QACHS,gBAAgB,cAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,qBAVlB,UAaF,wBAAIA,UAAU,oBACZ,kBAACM,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,YACHS,gBAAgB,SAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,wBAVlB,cAaDN,GACC,oCACE,wBAAIM,UAAU,oBACZ,kBAACM,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,WACHS,gBAAgB,cAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,qBAVlB,aAcF,wBACEA,UAAU,mBACVc,QAAS,kBAAMhB,ECjEpB,CACHI,KCfc,SDgBda,QAAS,CAAEC,QAAS,kBAAmB,IAAIC,MAAOC,gBDiE1C,kBAACZ,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,SACHS,gBAAgB,cAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,6BAVlB,cAeJN,GACA,oCACE,wBAAIM,UAAU,oBACZ,kBAACM,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,UACHS,gBAAgB,cAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,0BAVlB,YAaF,wBACEA,UAAU,mBACVc,QAAS,kBAAMhB,ECnHpB,CACHI,KCNqB,gBDOrBa,QAAS,CAAEC,QAAS,wBDoHZ,kBAACV,EAAA,EAAIC,KAAL,CACEC,GAAIC,IACJT,UAAU,WACVC,GAAG,SACHS,gBAAgB,cAChBC,YAAa,CACXC,WAAY,OACZC,MAAO,QAGT,0BAAMb,UAAU,4BAVlB,gB,gEGhHDmB,EATC,WACZ,OACI,yBAAKnB,UAAU,UACX,0BAAMA,UAAU,oDAChB,2C,mDC8DGoB,EA7DE,WACf,OACE,yBAAKf,GAAG,aAAaL,UAAU,iBAAiBqB,YAAU,YAExD,yBAAKrB,UAAU,iBAAiBsB,KAAK,WAEnC,yBAAKtB,UAAU,wBACb,yBACEA,UAAU,0BACVuB,OAAO,QACPC,IAAKC,IACLC,IAAI,YAEN,yBAAK1B,UAAU,yBACb,yBAAKA,UAAU,uBAAf,WACA,0BAAMA,UAAU,uBAAhB,2BAIJ,yBAAKA,UAAU,iBACb,yBACEA,UAAU,0BACVuB,OAAO,QACPC,IAAKG,IACLD,IAAI,YAEN,yBAAK1B,UAAU,yBACb,yBAAKA,UAAU,uBAAf,WACA,0BAAMA,UAAU,uBAAhB,0BAIJ,yBAAKA,UAAU,iBACb,yBACEA,UAAU,0BACVuB,OAAO,QACPC,IAAKI,IACLF,IAAI,YAEN,yBAAK1B,UAAU,yBACb,yBAAKA,UAAU,uBAAf,WACA,0BAAMA,UAAU,uBAAhB,0BAMJ,wBAAIA,UAAU,uBACZ,wBACEI,cAAY,cACZyB,gBAAc,IACd7B,UAAU,WAEZ,wBAAII,cAAY,cAAcyB,gBAAc,MAC5C,wBAAIzB,cAAY,cAAcyB,gBAAc,U,QCpDhDC,EAAgB,GAQhBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuCRC,WAAa,WACX,EAAKC,SAAS,CACZC,OAAQ,EAAKvC,MAAMuC,MACnBC,OAAQ,EAAKxC,MAAMwC,QAErB,EAAKC,0BA7CY,EAgDnBC,WAAa,SAACC,GACZ,KAAOA,EAAcC,OAAS,GAAG,CAC/B,IAAIC,EAAaF,EAAcG,OAAO,EAAG,IACzCZ,EAAca,KAAKF,GAErB,OAAOX,GArDU,EAyDnBc,YAAc,SAACC,GACb,EAAKX,SACH,CAEEY,kBAAmBD,EAAME,OAAOC,aAAa,QAE/C,WACE,EAAKhB,MAAMiB,eAAe,EAAKrD,MAAMkD,mBAErC,EAAKd,MAAMkB,QAAQP,KAAK,iBAlEX,EAuEnBQ,aAAe,SAACN,GACd,EAAKX,SACH,CACEY,kBAAmBD,EAAME,OAAOK,QAElC,WACE,EAAKpB,MAAMiB,eAAe,EAAKrD,MAAMkD,mBACrC,EAAKd,MAAMkB,QAAQP,KAAK,iBA5E5B,EAAK/C,MAAQ,CACXyD,MAAO,KACPC,WAAW,EACXC,WAAY,GACZT,kBAAmB,GACnBX,OAAO,EACPC,OAAO,GAET,EAAKE,WAAc,EAAKA,WAAWkB,KAAhB,gBACnB,EAAKvB,WAAa,EAAKA,WAAWuB,KAAhB,gBAClB,EAAKZ,YAAc,EAAKA,YAAYY,KAAjB,gBACnB,EAAKL,aAAe,EAAKA,aAAaK,KAAlB,gBAbH,E,qNAmBIC,M,OAAbC,E,OACNC,YAAW,WACT,EAAKzB,SAAS,CACZoB,WAAW,EACXC,WAAYG,MAEb,K,gDAEHE,QAAQC,IAAR,M,yJAMFC,KAAK5B,SAAS,CACZY,kBAAmB,KAGrBgB,KAAKzB,2B,+BA+CG,IAAD,SACkCyB,KAAKlE,MAAtC0D,EADD,EACCA,UAAWD,EADZ,EACYA,MAAOE,EADnB,EACmBA,WAG1B,OAAIF,EAEA,yBAAKrD,UAAU,oCACb,2BACE,0BAAMA,UAAU,oBAAhB,oBADF,6DAEmD,KAC9C,KAIAsD,EAEP,yBAAKtD,UAAU,mBACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,OACK,KAKT,yBAAKA,UAAU,gBACZ,IADH,IAEoC,kBAAC,EAAD,MAClC,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,eAAd,yBAAuD,IACvD,yBAAKA,UAAU,oBAAf,yGAEyC,KAClC,KACF,KAEuB,IAChC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBAAf,KAAyC,IACzC,yBAAKA,UAAU,mBACb,4BACEA,UAAU,+BACV+D,SAAUD,KAAKX,cAEf,4BAAQa,cAAY,EAAEC,QAAM,GAA5B,kBACkB,KACR,IACTV,EAAWW,KAAI,SAACC,GAAD,OACd,4BAAQC,IAAKD,EAAK9D,GAAI+C,MAAOe,EAAK9D,IAC/B,IACA8D,EAAKE,KAAKC,OAAO,GAAGC,cACnBJ,EAAKE,KAAKG,MAAM,GAAI,QAEtB,KACI,KACL,IACP,yBAAKxE,UAAU,mBAAf,KAAyC,KAE1C8D,KAAKlE,MAAMuC,OACV,yBAAKnC,UAAU,uBACZ8D,KAAKxB,WAAWiB,GAAY,GAAGW,KAAI,SAACC,GAAD,OAClC,yBAAKnE,UAAU,iBAAiBoE,IAAKD,EAAK9D,IACxC,yBAAKL,UAAU,sBACb,yBACEA,UAAU,YACVwB,IAAK2C,EAAKM,MACV/C,IAAKyC,EAAKE,KACVhE,GAAI8D,EAAK9D,GACTS,QAAS,EAAK8B,cACb,IACH,6BACG,IACAuB,EAAKE,KAAKC,OAAO,GAAGC,cACnBJ,EAAKE,KAAKG,MAAM,GAAI,KACjB,KACF,QAGX,yBAAKxE,UAAU,UACb,yBAAKA,UAAU,yCAAyCc,QAASgD,KAAK7B,YAAtE,UACS,0BAAMjC,UAAU,yBAA+B,QAK5D8D,KAAKlE,MAAMuC,OACX,yBAAKnC,UAAU,uBACZ8D,KAAKxB,WAAWiB,GAAY,GAAGW,KAAI,SAACC,GAAD,OAClC,yBAAKnE,UAAU,iBAAiBoE,IAAKD,EAAK9D,IACxC,yBAAKL,UAAU,sBACb,yBACEA,UAAU,YACVwB,IAAK2C,EAAKM,MACV/C,IAAKyC,EAAKE,KACVhE,GAAI8D,EAAK9D,GACTS,QAAS,EAAK8B,cACb,IACH,6BACG,IACAuB,EAAKE,KAAKC,OAAO,GAAGC,cACnBJ,EAAKE,KAAKG,MAAM,GAAI,KACjB,KACF,QAGX,yBAAKxE,UAAU,UACb,yBAAKA,UAAU,yCAAyCc,QAASgD,KAAK7B,YACpE,0BAAMjC,UAAU,wBADlB,kB,GA/LY0E,aA2MbC,oBAAQ,MAjNI,SAAC7E,GAAD,MAAe,CACxCmD,eAAgB,SAACH,GACfhD,EJ0C0B,SAACgD,GAC3B,MAAO,CACH5C,KClDuB,kBDmDvBa,QAAS,CAAEC,QAAS8B,II7CfG,CAAeH,QA+Mb6B,CAAkC5C,G,OC9MjD,IAAM6C,EAAa,SAACC,GAAD,MACjB,4CAA4CC,KAAKD,IAC7CE,EAAW,SAACF,GAAD,OAASA,GAAOA,EAAIrC,QAW/BwC,E,kDACJ,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDpC,MAAQ,GAGb,EAAKqF,YAAc,EAAKA,YAAYzB,KAAjB,gBALF,E,wDASP0B,GAAS,ICrCEhF,EAAMiF,EDqCT,QCrCGjF,EDsCZ,QCtCkBiF,EDsCTD,EClCX,IAAIE,SAAQ,SAACC,EAASC,GACzBC,MAHU,yBAGMrF,EAAM,CACdsF,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUT,KAExBU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHX,EAAQW,MAEXC,OAAM,SAAC5C,GACJO,QAAQC,IAAIR,UDoBEwC,MAAK,SAACK,GAC9B,IAAIF,EAAeE,EACnBtC,QAAQC,IAAImC,GAEZG,MAAMR,KAAKC,UAAUV,IAGrB,EAAKlD,MAAMoE,eAEX,EAAKpE,MAAMqE,kB,+BAKb,OAEE,yBAAKrG,UAAU,yCACb,yBAAKA,UAAU,mBAEb,kBAAC,OAAD,CACEsG,MAAM,QACNC,SAAUzC,KAAKmB,YACfjF,UAAU,gBAEV,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,eAAd,SACA,+BAGJ,yBAAKA,UAAU,kBAEb,yBAAKA,UAAU,UACb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,SACNtG,UAAU,qCACVK,GAAG,QACHgE,KAAK,QACLoC,YAAY,QACZC,WAAY,CACV3B,WACAH,gBAGJ,kBAAC,SAAD,CACE5E,UAAU,cACVsG,MAAM,SACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qBAKF4E,WACE,6BACE,0BAAM5E,UAAU,gCAAsC,IADxD,sBASV,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,UAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,YACNpG,KAAK,WACLF,UAAU,qCACVK,GAAG,WACHgE,KAAK,WACLoC,YAAY,WACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,cACVsG,MAAM,YACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,6BASV,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cACb,kBAAC,UAAQ6G,SAAT,CACEP,MAAM,YACNtG,UAAU,mBACVqE,KAAK,WACLhE,GAAG,WACHqG,WAAY,KAEd,2BAAO1G,UAAU,mBAAmB8G,QAAQ,YAA5C,kBAON,yBAAK9G,UAAU,uBAEb,2BACEA,UAAU,mDACVE,KAAK,SACLkD,MAAM,UAGR,kBAAC,IAAD,CACEnD,GAAG,QACHD,UAAU,uCACVE,KAAK,UAHP,WASF,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,QAAf,yBACyB,IACvB,uBACE+G,KAAK,UACLC,MAAO,CACLnG,MAAO,UACPoG,eAAgB,OAChBC,SAAU,SALd,iBAYJ,yBAAKlH,UAAU,yBACb,uBACE+G,KAAK,SACL/G,UAAU,aACVgH,MAAO,CACLnG,MAAO,UACPoG,eAAgB,OAChBC,SAAU,SANd,2B,GA3JexC,aA+KdC,oBAAQ,MAxLI,SAAC7E,GAAD,MAAe,CACxCsG,aAAc,WACZtG,ELfO,CACHI,KCNqB,gBDOrBa,QAAS,CAAEC,QAAS,uBKe1BqF,WAAY,WACVvG,EAASqH,UAAQC,MAAM,cAmLZzC,CAAkCK,GEjM3CqC,EAAY,SAACxC,GAAD,OAAiB,IAARA,GACrBE,EAAW,SAACF,GAAD,OAASA,GAAOA,EAAIrC,QAC/B8E,EAAY,SAACC,GAAD,OAAS,SAAC1C,GAAD,OAAUA,GAAOA,EAAIrC,QAAU+E,IAEpD3C,EAAa,SAACC,GAAD,MACjB,4CAA4CC,KAAKD,IAc7C2C,E,kDACJ,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAEDpC,MAAQ,GAGb,EAAK6H,aAAe,EAAKA,aAAajE,KAAlB,gBANH,E,yDAWN0B,GAIXpB,KAAK9B,MAAM0F,gBAEX5D,KAAK9B,MAAM2F,gB,+BAKX,OAAI7D,KAAK9B,MAAMtC,SACN,kBAAC,IAAD,CAAUO,GAAG,UAIpB,yBAAKD,UAAU,gDACb,yBAAKA,UAAU,mBACO,IACpB,kBAAC,OAAD,CAAMsG,MAAM,SAASC,SAAUzC,KAAK2D,cAClC,yBAAKzH,UAAU,8BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,eAAd,YACA,+BAEG,IACP,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,SACNtG,UAAU,qCACVK,GAAG,QACHgE,KAAK,QACLnE,KAAK,QACLuG,YAAY,QACZC,WAAY,CACV3B,WACAH,gBAGJ,kBAAC,SAAD,CACE5E,UAAU,cACVsG,MAAM,SACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qBAKF4E,WACE,6BACE,0BAAM5E,UAAU,gCAAsC,IADxD,qBAOD,KACF,IACP,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,UAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,YACNtG,UAAU,qCACVK,GAAG,WACHgE,KAAK,WACLnE,KAAK,WACLuG,YAAY,WACZC,WAAY,CACV3B,WACA6C,WAtGDL,EAsGsB,EAtGd,SAAC1C,GAAD,OAASA,GAAOA,EAAIrC,QAAU+E,IAuGrCD,UAAWA,EAAU,OAGzB,kBAAC,SAAD,CACEtH,UAAU,cACVsG,MAAM,YACNK,KAAK,UACLC,SAAU,CACR7B,SACE,0BAAM/E,UAAU,gCAElB4H,UAAW,8CACXN,UAAW,8CAGV,KACF,IACP,yBAAKtH,UAAU,uBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cACb,kBAAC,UAAQ6G,SAAT,CACEP,MAAM,SACNtG,UAAU,mBACVqE,KAAK,QACLhE,GAAG,QACHqG,WAAY,CACVW,eAGJ,2BAAOrH,UAAU,mBAAmB8G,QAAQ,SAA5C,sCACsC,MAGxC,kBAAC,SAAD,CACE9G,UAAU,cACVsG,MAAM,SACNK,KAAK,UACLC,SAAU,CACRS,UACE,6BACE,0BAAMrH,UAAU,gCAAsC,IADxD,iDAQH,IACc,IACrB,yBAAKA,UAAU,kBACZ,IACc,IACf,2BACEA,UAAU,mDACVE,KAAK,SACLkD,MAAM,WACL,IACmB,IACtB,kBAAC,IAAD,CAAMnD,GAAG,QAAQD,UAAU,wCAA3B,WAGK,IACP,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QAAf,4BAC4B,IAC1B,uBACE+G,KAAK,SACLC,MAAO,CACLnG,MAAO,UACPoG,eAAgB,OAChBC,SAAU,SALd,aAQa,KACR,KACA,KACF,KACD,KAEH,KAtLG,IAACK,M,GAgBW7C,aA4KfmD,cACblD,mBAzLsB,SAAC/E,GAAD,MAAY,CAClCF,SAAUE,EAAMF,aAES,SAACI,GAAD,MAAe,CACxC4H,cAAe,WACb5H,EPOO,CACHI,KC3BsB,iBD4BtBa,QAAS,CAAEC,QAAS,wBOP1B2G,YAAa,WACX7H,EAASqH,UAAQC,MAAM,eAiLzBzC,CAA6C6C,I,iBC9LzC5C,EAAa,SAACC,GAAD,MACjB,4CAA4CC,KAAKD,IAC7CE,EAAW,SAACF,GAAD,OAASA,GAAOA,EAAIrC,QAe/BsF,E,kDACJ,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IAEDpC,MAAQ,GAGb,EAAK6H,aAAe,EAAKA,aAAajE,KAAlB,gBANH,E,yDAUNX,GACXsD,MAAM,qBAAuBR,KAAKC,UAAU9B,KAAKlE,QAEjDkE,KAAK9B,MAAM+F,kBAEXjE,KAAK9B,MAAMgG,kB,+BAIX,OAAIlE,KAAK9B,MAAMtC,SACN,kBAAC,IAAD,CAAUO,GAAG,UAIpB,yBAAKD,UAAU,4CACb,yBAAKA,UAAU,IAEb,kBAAC,OAAD,CACEsG,MAAM,WACNC,SAAUzC,KAAK2D,aACfzH,UAAU,WAEV,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,eAAd,YACA,+BAKJ,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,UACb,2BAAOiI,IAAI,SACT,yBAAKjI,UAAU,cACb,yBAAKwB,IAAK0G,IAAYxG,IAAI,YAE5B,0BAAM1B,UAAU,cAAhB,iBAEF,kBAAC,UAAQmI,KAAT,CACE7B,MAAM,SACNjG,GAAG,QACHgE,KAAK,QACL+D,OAAO,UACPnE,QAAM,MAKZ,yBAAKjE,UAAU,kBAEb,yBAAKA,UAAU,mBACb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,aACNtG,UAAU,qCACVK,GAAG,YACHgE,KAAK,YACLoC,YAAY,aACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,aACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,8BASR,yBAAKA,UAAU,gCACb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,YACNtG,UAAU,qCACVK,GAAG,WACHgE,KAAK,WACLoC,YAAY,YACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,YACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,8BAUV,yBAAKA,UAAU,kBAEb,yBAAKA,UAAU,mBACb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,OACNtG,UAAU,qCACVK,GAAG,MACHgE,KAAK,MACLoC,YAAY,gBACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,OACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,uBASR,yBAAKA,UAAU,gCACb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,OACNtG,UAAU,qCACVK,GAAG,MACHgE,KAAK,MACLoC,YAAY,6BAKlB,yBAAKzG,UAAU,uBAEb,yBAAKA,UAAU,mBACb,kBAAC,UAAD,CACEE,KAAK,QACLoG,MAAM,SACNtG,UAAU,qCACVK,GAAG,QACHgE,KAAK,QACLoC,YAAY,QACZC,WAAY,CACV3B,WACAH,gBAGJ,kBAAC,SAAD,CACE5E,UAAU,0BACVsG,MAAM,SACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qBAKF4E,WACE,6BACE,0BAAM5E,UAAU,gCAAsC,IADxD,qBASR,yBAAKA,UAAU,gCACb,kBAAC,UAAD,CACEsG,MAAM,OACNtG,UAAU,qCACVE,KAAK,MACLG,GAAG,MACHgE,KAAK,MACLoC,YAAY,YACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,OACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qCASV,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,YAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,eACNtG,UAAU,qCACVK,GAAG,cACHgE,KAAK,cACLoC,YAAY,eACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,eACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,gCAQR,yBAAKA,UAAU,YAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,QACNtG,UAAU,kDACVK,GAAG,OACHgE,KAAK,OACLoC,YAAY,OACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,QACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,0BAWZ,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,WACNtG,UAAU,qCACVK,GAAG,UACHgE,KAAK,UACLoC,YAAY,WACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,WACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,4BAQR,yBAAKA,UAAU,YAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,SACNtG,UAAU,kDACVK,GAAG,QACHgE,KAAK,QACLoC,YAAY,QACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,SACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,4BAYd,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,mBAEb,kBAAC,UAAQwG,KAAT,CACEF,MAAM,WACNtG,UAAU,0CACVK,GAAG,UACHgE,KAAK,UACLoC,YAAY,UACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,WACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,2BAQR,yBAAKA,UAAU,YAEb,kBAAC,UAAQqI,OAAT,CACE/B,MAAM,mBACNtG,UAAU,mDACVK,GAAG,kBACHqG,WAAY,CACV3B,aAGF,4BAAQ3B,MAAM,GAAGkF,UAAQ,EAACC,UAAQ,EAACtE,QAAM,GAAzC,oBAGA,4BAAQb,MAAM,WAAd,UACA,4BAAQA,MAAM,MAEhB,kBAAC,SAAD,CACEpD,UAAU,0BACVsG,MAAM,mBACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qCAUV,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,UAAQqI,OAAT,CACE/B,MAAM,YACNtG,UAAU,mDACV0G,WAAY,CACV3B,aAGF,4BAAQ3B,MAAM,GAAGkF,UAAQ,EAACC,UAAQ,EAACtE,QAAM,GAAzC,aAGA,4BAAQb,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,WAEF,kBAAC,SAAD,CACEpD,UAAU,0BACVsG,MAAM,YACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,qCAQR,yBAAKA,UAAU,mBACb,kBAAC,UAAQqI,OAAT,CACE/B,MAAM,WACNtG,UAAU,mDACV0G,WAAY,CACV3B,aAGF,4BAAQ3B,MAAM,GAAGkF,UAAQ,EAACC,UAAQ,EAACtE,QAAM,GAAzC,YAGA,4BAAQb,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,WAEF,kBAAC,SAAD,CACEpD,UAAU,0BACVsG,MAAM,WACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,sCAUZ,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBAEb,kBAAC,UAAD,CACEE,KAAK,OACLoG,MAAM,eACNtG,UAAU,0CACVK,GAAG,cACHgE,KAAK,cACLoC,YAAY,eACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,eACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,gCASR,yBAAKA,UAAU,mBAEb,kBAAC,UAAD,CACEE,KAAK,OACLoG,MAAM,eACNtG,UAAU,0CACVK,GAAG,cACHgE,KAAK,cACLoC,YAAY,eACZC,WAAY,CACV3B,cAGJ,kBAAC,SAAD,CACE/E,UAAU,0BACVsG,MAAM,eACNK,KAAK,UACLC,SAAU,CACR7B,SACE,6BACE,0BAAM/E,UAAU,gCAAsC,IADxD,mCAYd,yBAAKA,UAAU,uCAEb,2BACEA,UAAU,6CACVE,KAAK,SACLkD,MAAM,aAIR,kBAAC,IAAD,CACEnD,GAAG,QACHD,UAAU,gCACVE,KAAK,UAHP,kB,GAthBkBwE,aAsiBjBmD,cACblD,mBApjBsB,SAAC/E,GAAD,MAAY,CAClCF,SAAUE,EAAMF,aAGS,SAACI,GAAD,MAAe,CACxCiI,gBAAiB,WACfjI,ERqBO,CACHI,KCvCwB,mBDwCxBa,QAAS,CAAEC,QAAS,8BQrB1BgH,cAAe,WACblI,EAASqH,UAAQC,MAAM,iBA2iBzBzC,CAA6CmD,I,iBCvjBzCU,E,4MACJC,YAAc,CACZ,CACEpI,GAAI,EACJgE,KAAM,WACNqE,SAAU,oBACVC,QAAS,oDACTC,MAAO,mBACPC,KAAM,mBACNC,IAAK,4BACLC,IAAK,wC,uDAKP,OAAIjF,KAAK9B,MAAMtC,SACN,kBAAC,IAAD,CAAUO,GAAG,UAGpB,yBAAKD,UAAU,+CACb,yBAAKK,GAAG,mBAAmBL,UAAU,aAAasB,KAAK,UACrD,yBAAKtB,UAAU,yBACb,yBAAKA,UAAU,iBAEb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,oBACA,4BAAQE,KAAK,SAASF,UAAU,QAAQgJ,eAAa,SAArD,SAMF,yBAAKhJ,UAAU,cAEb,0BAAMiJ,OAAO,GAAGzD,OAAO,IACrB,yBAAKxF,UAAU,kBAEb,yBAAKA,UAAU,UACb,2BACEA,UAAU,qCACVK,GAAG,YACHgE,KAAK,YACLnE,KAAK,OACLuG,YAAY,aACZ1B,UAAQ,KAIZ,yBAAK/E,UAAU,eACb,2BACEA,UAAU,qCACVK,GAAG,WACHgE,KAAK,WACLnE,KAAK,OACLuG,YAAY,YACZ1B,UAAQ,KAIZ,yBAAK/E,UAAU,eACb,2BACEA,UAAU,qCACVK,GAAG,QACHgE,KAAK,QACLnE,KAAK,QACLuG,YAAY,QACZ1B,UAAQ,KAIZ,yBAAK/E,UAAU,eACb,2BACEA,UAAU,qCACVK,GAAG,MACHgE,KAAK,MACLnE,KAAK,MACLuG,YAAY,YACZ1B,UAAQ,KAIZ,yBAAK/E,UAAU,eACb,2BAAO8G,QAAQ,mBAAf,oBACA,2BACE9G,UAAU,qCACVK,GAAG,kBACHgE,KAAK,kBACLnE,KAAK,OACL6E,UAAQ,MAOd,yBAAK/E,UAAU,kCAEb,2BACEA,UAAU,gCACVE,KAAK,SACLkD,MAAM,qBAIR,2BACEpD,UAAU,+BACVE,KAAK,SACLkD,MAAM,SACN4F,eAAa,aAQrB,yBAAKhJ,UAAU,oBAKrB,yBAAKA,UAAU,IACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,eAAd,WACA,8BAEF,yBAAKA,UAAU,2BACb,yBACEA,UAAU,YACVwB,IAAK0H,IACLxH,IAAI,qBAEN,iDAGF,yBAAK1B,UAAU,eACb,yBAAKA,UAAU,0BAEb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,oBAAhB,MAEF,yBAAKA,UAAU,SACb,wBAAIA,UAAU,iBACZ,4BACE,uBAAG+G,KAAK,IAAIhE,OAAO,SAAnB,iCAIN,yBAAK/C,UAAU,SACb,0BAAMA,UAAU,oBAAhB,OAGJ,+BAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,+BAAhB,MAEF,yBAAKA,UAAU,SACb,wBAAIA,UAAU,iBACZ,mFAKJ,yBAAKA,UAAU,SACb,0BAAMA,UAAU,oBAAhB,OAGJ,+BAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,qBAAhB,MAEF,yBAAKA,UAAU,SACb,wBAAIA,UAAU,iBACZ,4BACE,0BAAMA,UAAU,oBAAhB,UADF,oBAIA,4BACE,0BAAMA,UAAU,oBAAhB,WADF,0BAMJ,yBAAKA,UAAU,SACb,0BAAMA,UAAU,oBAAhB,OAGJ,+BAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,2BAAhB,MAEF,yBAAKA,UAAU,SACb,wBAAIA,UAAU,iBACZ,gDACA,mDAGJ,yBAAKA,UAAU,SACb,0BAAMA,UAAU,oBAAhB,OAGJ,+BAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,UACb,2BACEE,KAAK,SACLF,UAAU,mCACVoD,MAAM,sBACNjD,cAAY,QACZC,cAAY,sBACX,IACH,+BAGJ,yBAAKJ,UAAU,6BACb,yBAAKA,UAAU,eACb,uBAAG+G,KAAK,gBACN,0BAAM/G,UAAU,oBAAhB,iB,GAlPI0E,aA+PXmD,cAAWlD,mBAnQF,SAAC/E,GAAD,MAAY,CAClCF,SAAUE,EAAMF,YAkQQiF,CAAyB6D,ICvP7CW,E,kDACJ,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IA8CRoH,aAAe,gBAEwBC,IAAjC,EAAKrH,MAAMc,mBACb,EAAKZ,SACH,CACEkB,MAAO,EAAKpB,MAAMc,kBAClBwG,cAAc,IAEhB,WAEE,EAAKC,2BAzDM,EA6EnBpG,aAAe,SAACN,GAEd,EAAKX,SACH,CACEkB,MAAOP,EAAME,OAAOK,MACpBkG,cAAc,IAGhB,WACE,EAAKC,2BApFT,EAAK3J,MAAQ,CACXyD,MAAO,KACPC,WAAW,EACXkG,SAAU,GACVjG,WAAY,GACZH,MAAO,GACPkG,cAAc,GAEhB,EAAKnG,aAAe,EAAKA,aAAaK,KAAlB,gBACpB,EAAK4F,aAAe,EAAKA,aAAa5F,KAAlB,gBAXH,E,qNAiBIC,M,OAAbC,E,OACNC,YAAW,WACT,EAAKzB,SAAS,CACZoB,WAAW,EACXC,WAAYG,MAEb,K,gDAEHE,QAAQC,IAAR,M,4SAOmBJ,IAAA,UACdK,KAAKlE,MAAMwD,Q,OADVM,E,OAGNC,YAAW,WACT,EAAKzB,SAAS,CACZoB,WAAW,EACXkG,SAAU9F,IAEZE,QAAQC,IAAI,EAAKjE,MAAM4J,YACtB,K,gDAEH5F,QAAQC,IAAR,M,yJAsBFC,KAAK5B,SAAS,CACZY,kBAAmB,KAIrBgB,KAAKzB,yBAGLyB,KAAKsF,iB,+BAkBG,IAAD,EAQHtF,KAAKlE,MANPyD,EAFK,EAELA,MACAC,EAHK,EAGLA,UACAkG,EAJK,EAILA,SACAjG,EALK,EAKLA,WACA+F,EANK,EAMLA,aACAlG,EAPK,EAOLA,MAIIqG,EAAgBD,EAASE,QAC7B,SAACC,GAAD,OAAOA,EAAEC,0BAA4BxG,KAIvC,OAAIC,EAEA,yBAAKrD,UAAU,oCACb,2BACE,0BAAMA,UAAU,oBAAhB,mBADF,gEAOKsD,EAEP,yBAAKtD,UAAU,mBACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,QAMJ,yBAAKA,UAAU,6CAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,4BACEA,UAAU,+BACV+D,SAAUD,KAAKX,cAEf,4BAAQa,cAAY,EAACC,QAAM,GAA3B,mBAGCV,EAAWW,KAAI,SAACC,GAAD,OACd,4BAAQC,IAAKD,EAAK9D,GAAI+C,MAAOe,EAAK9D,IAC/B8D,EAAKE,KAAKC,OAAO,GAAGC,cAAgBJ,EAAKE,KAAKG,MAAM,QAM1D8E,GACC,uBAAGtJ,UAAU,QAAb,kBACkB,IAChB,0BAAMA,UAAU,oBACb,IACAyJ,EAAcjH,WASzB,yBAAKxC,UAAU,mBACZwJ,EAAStF,KAAI,SAACC,GAAD,OACZ,yBAAKnE,UAAU,uBAAuBoE,IAAKD,EAAK9D,IAC9C,yBAAKL,UAAU,QACb,yBAAKA,UAAU,YACb,yBAAKwB,IAAK0H,IAAQxH,IAAI,GAAGmI,MAAM,SAEjC,yBAAK7J,UAAU,aAAamE,EAAKE,MAEjC,uBAAGrE,UAAU,SAAb,gBACA,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,iBAElB,yBAAKA,UAAU,UACb,uBAAGA,UAAU,kBAAkB+G,KAAM5C,EAAK2F,aACvC3F,EAAK2F,gBAKd,yBAAK9J,UAAU,qCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,sBAElB,yBAAKA,UAAU,UAAUmE,EAAK4F,WAGlC,yBAAK/J,UAAU,QACb,4BAAQA,UAAU,UAAlB,4B,GAhMS0E,aA6MdC,sBAxNS,SAAC/E,GACvB,OAAOA,EAAMqD,eAAerD,OAC1B,UAAKyJ,EACH,MAAO,CAACvG,uBAAmBuG,GAC3B,QACE,MAAM,CACJvG,kBAAmBlD,EAAMqD,eAAerD,UAkNV,KAAzB+E,CAA+BwE,G,4DCvM/Ba,GAnBA,WACb,OACE,yBAAKhK,UAAU,2BACb,yBAAKA,UAAU,gBACb,uBAAG+G,KAAK,KACN,yBAAK/G,UAAU,cAAcwB,IAAKyI,KAAQvI,IAAI,mBAEhD,uBAAGqF,KAAK,KACN,yBAAM/G,UAAU,cAAcwB,IAAK0I,KAAaxI,IAAI,kBAEtD,uBAAGqF,KAAK,KACN,yBAAK/G,UAAU,cAAcwB,IAAK2I,KAAQzI,IAAI,qBAGlD,0F,cCsBS0I,OAtBf,WACE,OACI,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWC,IACrC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,IACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,UAAUC,UAAWG,IACvC,kBAAC,IAAD,CACEL,OAAK,EACLC,KAAK,YACLC,UAAWI,KAEb,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,YAAYC,UAAWK,IACzC,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,WAAWC,UAAW/B,IACxC,kBAAC,IAAD,CAAUvI,GAAG,WAEf,kBAAC,GAAD,QC1BY4K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBClBOC,GAAqB,CAC9BrL,YAAY,EACZsL,UAAW,IAGFC,GAAsB,CAC/BD,UAAW,GACXE,aAAc,IAGLC,GAAwB,CACjCC,IAAK,KACLC,UAAW,GACXC,SAAU,GACVC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,IAAK,GACLC,YAAa,GACbC,KAAM,GACNC,QAAS,GACTpM,MAAO,GACPqM,QAAS,GACTC,gBAAiB,GACjBC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,YAAa,ICXFC,GAbW,WAAoD,IAAnD3M,EAAkD,uDAA1CsL,GAAmBrL,WAAYoJ,EAAW,uCACzE,OAAQA,EAAO/I,MACX,IdLqB,gBcMjB,OAAQ,gBAAIN,IAAUA,EAC1B,IdNkB,acOd,OAAO,6BAAIA,GAAX,IAAkBA,UACtB,IdHc,ScIV,OAAQ,gBAAIA,IAAUA,EAC1B,QACI,OAAOA,ICEJ4M,GAXA,WAA8C,IAA7C5M,EAA4C,uDAApC,CAAEwL,wBAAuBnC,EAAW,uCACxD,OAAQA,EAAO/I,MACX,IfHsB,iBeKtB,IfJmB,ceMnB,QACI,OAAON,ICIJ6M,GAXE,WAAgD,IAA/C7M,EAA8C,uDAAtC,CAAE0L,0BAAyBrC,EAAW,uCAC5D,OAAQA,EAAO/I,MACX,IhBDwB,mBgBGxB,IhBFqB,gBgBIrB,QACI,OAAON,ICRb8M,GAAgB,CAClBC,iBAAkB,IAYP1J,GATQ,WAAwC,IAAvCrD,EAAsC,uDAA9B,CAAE8M,kBAAiBzD,EAAW,uCAC1D,OAAQA,EAAO/I,MACX,IjBDuB,kBiBEnB,OAAQ,gBAAIN,GAAS,CAAEA,MAAOqJ,EAAOlI,QAAQC,SACjD,QACI,OAAOpB,ICmBJgN,GAnBKC,2BAAgB,qDAChChN,WAAYA,IACTiN,sBAAY,CACXC,MAAO7B,MAHoB,IAM/BsB,OAAQA,IACLM,sBAAY,CACXN,OAAQpB,MARmB,IAW/BqB,SAAUA,IACPK,sBAAY,CACXL,SAAUnB,MAbiB,IAgB/BrI,eAAgBA,MClBd+J,GAAQC,uBACZL,GACA9B,OAAOoC,8BAAgCpC,OAAOoC,gCAGhDC,IAASC,OACP,kBAAC,WAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAMK,WAAP,KACE,kBAAC,GAAD,OAFJ,KAKAC,SAASC,eAAe,SP+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7H,MAAK,SAAA8H,GACJA,EAAaC,gBAEd3H,OAAM,SAAA5C,GACLO,QAAQP,MAAMA,EAAMrC,a,mBQzI5B6M,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.ab90adcd.chunk.js","sourcesContent":["//Imports\r\nimport React from \"react\";\r\nimport { loginSuccess, logout } from \"../../redux/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav } from \"react-bootstrap/\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; //Remove useDispatch\r\n//Includes\r\n\r\nconst NavBar = () => {\r\n  //Holds the current state of the user (logged in or logged out)\r\n  const isLogged = useSelector((state) => state.isLoggedIn);\r\n\r\n  //Remove the following line\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark navbar-custom\">\r\n      {/*Logo Placement*/}\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        <span>Minute Man</span>\r\n      </NavLink>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#NavBar\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      {/*Navigation Links*/}\r\n      <div className=\"collapse navbar-collapse\" id=\"NavBar\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          {isLogged && (\r\n            <li>\r\n              <span className=\"nav-link\">Hello, User </span>\r\n            </li>\r\n          )}\r\n          <li className=\"nav-item\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              className=\"nav-link\"\r\n              to=\"/home\"\r\n              activeClassName=\"active-link\"\r\n              activeStyle={{\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              <span className=\"fa fa-home fa-sm\"></span> Home\r\n            </Nav.Link>\r\n          </li>\r\n          <li className=\"nav-item ml-md-3\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              className=\"nav-link\"\r\n              to=\"/services\"\r\n              activeClassName=\"active\"\r\n              activeStyle={{\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              <span className=\"fa fa-list-ul fa-sm\"></span> Services\r\n            </Nav.Link>\r\n          </li>\r\n          {isLogged && (\r\n            <>\r\n              <li className=\"nav-item ml-md-3\">\r\n                <Nav.Link\r\n                  as={NavLink}\r\n                  className=\"nav-link\"\r\n                  to=\"/profile\"\r\n                  activeClassName=\"active-link\"\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  <span className=\"fa fa-user fa-sm\"></span> Profile\r\n                </Nav.Link>\r\n              </li>\r\n              {/* Remove onClick */}\r\n              <li\r\n                className=\"nav-item ml-md-3\"\r\n                onClick={() => dispatch(logout())}\r\n              >\r\n                <Nav.Link\r\n                  as={NavLink}\r\n                  className=\"nav-link\"\r\n                  to=\"/login\"\r\n                  activeClassName=\"active-link\"\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  <span className=\"fa fa-sign-out-alt fa-sm\"></span> Logout\r\n                </Nav.Link>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!isLogged && (\r\n            <>\r\n              <li className=\"nav-item ml-md-3\">\r\n                <Nav.Link\r\n                  as={NavLink}\r\n                  className=\"nav-link\"\r\n                  to=\"/signup\"\r\n                  activeClassName=\"active-link\"\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  <span className=\"fa fa-user-plus fa-sm\"></span> Signup\r\n                </Nav.Link>\r\n              </li>\r\n              <li\r\n                className=\"nav-item ml-md-3\"\r\n                onClick={() => dispatch(loginSuccess())}\r\n              >\r\n                {/* Remove onClick */}\r\n                <Nav.Link\r\n                  as={NavLink}\r\n                  className=\"nav-link\"\r\n                  to=\"/login\"\r\n                  activeClassName=\"active-link\"\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  <span className=\"fa fa-sign-in-alt fa-sm\"></span> Login\r\n                </Nav.Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import * as types from \"./types\";\r\n\r\n//Login Action Creators\r\n\r\nexport const loginSuccess = () => {\r\n    return {\r\n        type: types.LOGIN_SUCCESS,\r\n        payload: { message: \"Successful login\" },\r\n    };\r\n};\r\n\r\nexport const loginFail = () => {\r\n    return {\r\n        type: types.LOGIN_FAIL,\r\n        payload: { message: \"Login failed\" },\r\n    };\r\n};\r\n\r\n//Logout Action Creator\r\nexport const logout = () => {\r\n    return {\r\n        type: types.LOGOUT,\r\n        payload: { message: \"Logged out at \" + new Date().toString() },\r\n    };\r\n};\r\n\r\n//Signup Action Creators\r\nexport const signupSuccess = () => {\r\n    return {\r\n        type: types.SIGNUP_SUCCESS,\r\n        payload: { message: \"Successful signup\" },\r\n    };\r\n};\r\nexport const signupFail = () => {\r\n    return {\r\n        type: types.SIGNUP_FAIL,\r\n        payload: { message: \"Signup failed\" },\r\n    };\r\n};\r\n\r\n//Registration Action Creators\r\nexport const registerSuccess = () => {\r\n    return {\r\n        type: types.REGISTER_SUCCESS,\r\n        payload: { message: \"Successful registration\" },\r\n    };\r\n};\r\n\r\nexport const registerFail = () => {\r\n    return {\r\n        type: types.REGISTER_FAIL,\r\n        payload: { message: \"Registration failed\" },\r\n    };\r\n};\r\n\r\nexport const selectCategory = (serviceCategoryId) => {\r\n    return {\r\n        type: types.SELECT_CATEGORY,\r\n        payload: { message: serviceCategoryId },\r\n    }\r\n}","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SELECT_CATEGORY = \"SELECT_CATEGORY\";","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","//Imports\r\nimport React from \"react\";\r\n//Includes\r\nimport slide1 from \"../../assets/img/slider/slide1.jpg\";\r\nimport slide2 from \"../../assets/img/slider/slide2.jpg\";\r\nimport slide3 from \"../../assets/img/slider/slide3.jpg\";\r\n\r\nconst Carousel = () => {\r\n  return (\r\n    <div id=\"mycarousel\" className=\"carousel slide\" data-ride=\"carousel\">\r\n      {/*Slides*/}\r\n      <div className=\"carousel-inner\" role=\"listbox\">\r\n        {/*Slide 1*/}\r\n        <div className=\"carousel-item active\">\r\n          <img\r\n            className=\"d-block w-100 img-fluid\"\r\n            height=\"214px\"\r\n            src={slide1}\r\n            alt=\"slide-1\"\r\n          />\r\n          <div className=\"carousel-caption mb-5\">\r\n            <div className=\"carousel-caption-lg\">SERVICE</div>\r\n            <span className=\"carousel-caption-sm\"> At Your Finger Tips!</span>\r\n          </div>\r\n        </div>\r\n        {/*Slide 2*/}\r\n        <div className=\"carousel-item\">\r\n          <img\r\n            className=\"d-block w-100 img-fluid\"\r\n            height=\"214px\"\r\n            src={slide2}\r\n            alt=\"slide-2\"\r\n          />\r\n          <div className=\"carousel-caption mb-5\">\r\n            <div className=\"carousel-caption-lg\">SERVICE</div>\r\n            <span className=\"carousel-caption-sm\"> At Your Finger Tips</span>\r\n          </div>\r\n        </div>\r\n        {/* Slide 3 */}\r\n        <div className=\"carousel-item\">\r\n          <img\r\n            className=\"d-block w-100 img-fluid\"\r\n            height=\"214px\"\r\n            src={slide3}\r\n            alt=\"slide-3\"\r\n          />\r\n          <div className=\"carousel-caption mb-5\">\r\n            <div className=\"carousel-caption-lg\">SERVICE</div>\r\n            <span className=\"carousel-caption-sm\"> At Your Finger Tips</span>\r\n          </div>\r\n        </div>\r\n        {/*Add Other Slides Here*/}\r\n\r\n        {/*Slider/Carousel Indicator*/}\r\n        <ol className=\"carousel-indicators\">\r\n          <li\r\n            data-target=\"#mycarousel\"\r\n            data-slide-to=\"0\"\r\n            className=\"active\"\r\n          ></li>\r\n          <li data-target=\"#mycarousel\" data-slide-to=\"1\"></li>\r\n          <li data-target=\"#mycarousel\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCategory } from \"../../redux/actions/\";\r\nimport Loading from \"../../components/LoadingComponent\";\r\nimport Carousel from \"../../components/Carousel/Carousel\";\r\nimport * as mmApiCall from \"mmApi/mmApi\";\r\n//Includes\r\n\r\nconst arrayOfArrays = [];\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  selectCategory: (serviceCategoryId) => {\r\n    dispatch(selectCategory(serviceCategoryId));\r\n  },\r\n});\r\n\r\nclass HomeComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoading: true,\r\n      serviceCat: [],\r\n      serviceCategoryId: \"\",\r\n      page1: true,\r\n      page2: false,\r\n    };\r\n    this.spiltArray  = this.spiltArray.bind(this);\r\n    this.togglePage = this.togglePage.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  //Fetch Service Categories\r\n  async fetchServiceCategories() {\r\n    try {\r\n      const data = await mmApiCall.getServiceCategory();\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n          serviceCat: data,\r\n        });\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Reset Service Category ID On Page Load/Reload\r\n    this.setState({\r\n      serviceCategoryId: \"\",\r\n    });\r\n    //Then Fetch Data\r\n    this.fetchServiceCategories();\r\n  }\r\n\r\n  togglePage = () => {\r\n    this.setState({\r\n      page1: !this.state.page1,\r\n      page2: !this.state.page2\r\n    })\r\n    this.fetchServiceCategories();\r\n  }\r\n\r\n  spiltArray = (serviceCatArr) => {\r\n    while (serviceCatArr.length > 0) {\r\n      let arrElement = serviceCatArr.splice(0, 12);\r\n      arrayOfArrays.push(arrElement);\r\n    }\r\n    return arrayOfArrays;\r\n  };\r\n\r\n\r\n  handleClick = (event) => {\r\n    this.setState(\r\n      {\r\n        //Grab The Id Of The Selected Element & Update The Following State Variable\r\n        serviceCategoryId: event.target.getAttribute(\"id\"),\r\n      },\r\n      () => {\r\n        this.props.selectCategory(this.state.serviceCategoryId);\r\n        //After Updating Redux State, Redirect The User To The Services Page\r\n        this.props.history.push(\"/services\");\r\n      }\r\n    );\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState(\r\n      {\r\n        serviceCategoryId: event.target.value,\r\n      },\r\n      () => {\r\n        this.props.selectCategory(this.state.serviceCategoryId);\r\n        this.props.history.push(\"/services\");\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isLoading, error, serviceCat } = this.state;\r\n\r\n    // In The Event Of An Error, Display The Following Message\r\n    if (error) {\r\n      return (\r\n        <div className=\"content-wrapper text-center mt-5\">\r\n          <p>\r\n            <span className=\"font-weight-bold\"> Network Error: </span>Something\r\n            went wrong.The operation could not be completed.{\" \"}\r\n          </p>{\" \"}\r\n        </div>\r\n      );\r\n      // Show Loading Icon Until All The Data Has Been Fetched\r\n    } else if (isLoading) {\r\n      return (\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"vertical-center\">\r\n            <Loading />\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"main-content\">\r\n          {\" \"}\r\n          {/*Included Carousel Component*/} <Carousel />\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mt-5\">\r\n              <h2 className=\"text-center\"> Featured Categories </h2>{\" \"}\r\n              <div className=\"text-center mb-3\">\r\n                What are you interested in ? Explore the categories of services\r\n                we provide and see what best suits you{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </div>\r\n          {/* Selection Option: Start */}{\" \"}\r\n          <div className=\"row m-1\">\r\n            <div className=\"col-12 col-md-3\"> </div>{\" \"}\r\n            <div className=\"col-12 col-md-6\">\r\n              <select\r\n                className=\"form-control form-control-lg\"\r\n                onChange={this.handleChange}\r\n              >\r\n                <option defaultValue  hidden>\r\n                  Select Category{\" \"}\r\n                </option>{\" \"}\r\n                {serviceCat.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {\" \"}\r\n                    {item.name.charAt(0).toUpperCase() +\r\n                      item.name.slice(1)}{\" \"}\r\n                  </option>\r\n                ))}{\" \"}\r\n              </select>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"col-12 col-md-3\"> </div>{\" \"}\r\n          </div>\r\n          {this.state.page1 && (\r\n            <div className=\"row mt-5 mb-5 page1\">\r\n              {this.spiltArray(serviceCat)[0].map((item) => (\r\n                <div className=\"col-6 col-md-3\" key={item.id}>\r\n                  <div className=\"content-block mt-3\">\r\n                    <img\r\n                      className=\"fluid-img\"\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      id={item.id}\r\n                      onClick={this.handleClick}\r\n                    />{\" \"}\r\n                    <div>\r\n                      {\" \"}\r\n                      {item.name.charAt(0).toUpperCase() +\r\n                        item.name.slice(1)}{\" \"}\r\n                    </div>{\" \"}\r\n                  </div>{\" \"}\r\n                </div>\r\n              ))}\r\n              <div className=\"col-12\">\r\n                <div className=\"text-center mb-3 service-category-page\" onClick={this.togglePage}>\r\n                  Page 2 <span className=\"fas fa-chevron-right\"></span>{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {!this.state.page1 && (\r\n            <div className=\"row mt-5 mb-5 page2\">\r\n              {this.spiltArray(serviceCat)[1].map((item) => (\r\n                <div className=\"col-6 col-md-3\" key={item.id}>\r\n                  <div className=\"content-block mt-3\">\r\n                    <img\r\n                      className=\"fluid-img\"\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      id={item.id}\r\n                      onClick={this.handleClick}\r\n                    />{\" \"}\r\n                    <div>\r\n                      {\" \"}\r\n                      {item.name.charAt(0).toUpperCase() +\r\n                        item.name.slice(1)}{\" \"}\r\n                    </div>{\" \"}\r\n                  </div>{\" \"}\r\n                </div>\r\n              ))}\r\n              <div className=\"col-12\">\r\n                <div className=\"text-center mb-3 service-category-page\" onClick={this.togglePage}>\r\n                  <span className=\"fas fa-chevron-left\"></span> Page 1\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(HomeComponent);\r\n","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\nimport { PostData } from \"../../services/PostData\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginSuccess } from \"../../redux/actions/\";\r\n//Includes\r\n\r\n/*Test API\r\n\"email\": \"eve.holt@reqres.in\",\r\n\"password\": \"cityslicka\"*/\r\n\r\n//Validation Functions\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst required = (val) => val && val.length;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loginSuccess: () => {\r\n    dispatch(loginSuccess());\r\n  },\r\n  loginReset: () => {\r\n    dispatch(actions.reset(\"login\"));\r\n  },\r\n});\r\n\r\nclass LoginComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    //Bind Handler Functions\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  //Handle Login\r\n  handleLogin(values) {\r\n    PostData(\"login\", values).then((result) => {\r\n      let responseJSON = result;\r\n      console.log(responseJSON);\r\n      //Remove the following line\r\n      alert(JSON.stringify(values));\r\n\r\n      //Call successful login reducer\r\n      this.props.loginSuccess();\r\n      //Then reset login form fields after successful login\r\n      this.props.loginReset();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      /*Main Content Wrapper: Start*/\r\n      <div className=\"container-fluid content-wrapper login\">\r\n        <div className=\"vertical-center\">\r\n          {/* Form: Start */}\r\n          <Form\r\n            model=\"login\"\r\n            onSubmit={this.handleLogin}\r\n            className=\"mx-auto form\"\r\n          >\r\n            <div className=\"form-group row text-center\">\r\n              <div className=\"col-12\">\r\n                <h1 className=\"text-center\">Login</h1>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              {/* Email */}\r\n              <div className=\"col-12\">\r\n                <Control.text\r\n                  model=\".email\"\r\n                  className=\"input form-control form-control-lg\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  validators={{\r\n                    required,\r\n                    validEmail,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".email\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Email is required\r\n                      </div>\r\n                    ),\r\n                    validEmail: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Invalid email\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row mt-3\">\r\n              <div className=\"col-12\">\r\n                {/* Password */}\r\n                <Control.text\r\n                  model=\".password\"\r\n                  type=\"password\"\r\n                  className=\"input form-control form-control-lg\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".password\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Password is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row mt-3\">\r\n              <div className=\"col-12\">\r\n                <div className=\"form-check\">\r\n                  <Control.checkbox\r\n                    model=\".remember\"\r\n                    className=\"form-check-input\"\r\n                    name=\"remember\"\r\n                    id=\"remember\"\r\n                    validators={{}}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"remember\">\r\n                    Remember Me\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Buttons: Login , Cancel */}\r\n            <div className=\"form-group-row mt-3\">\r\n              {/* Login Button */}\r\n              <input\r\n                className=\"btn btn-primary bg-primary btn-block btn-lg mt-3\"\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n              />\r\n              {/* Cancel Button */}\r\n              <Link\r\n                to=\"/home\"\r\n                className=\"btn btn-danger btn-block btn-lg mt-3\"\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"form-group-row\">\r\n              <div className=\"mt-3\">\r\n                Don't have an account?{\" \"}\r\n                <a\r\n                  href=\"/signup\"\r\n                  style={{\r\n                    color: \"#000000\",\r\n                    textDecoration: \"none\",\r\n                    fontSize: \"100%\",\r\n                  }}\r\n                >\r\n                  Signup here\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mt-3 mb-3\">\r\n              <a\r\n                href=\"/login\"\r\n                className=\"text-muted\"\r\n                style={{\r\n                  color: \"#000000\",\r\n                  textDecoration: \"none\",\r\n                  fontSize: \"100%\",\r\n                }}\r\n              >\r\n                Forget Password\r\n              </a>\r\n            </div>\r\n          </Form>\r\n          {/* Form: End */}\r\n        </div>\r\n      </div>\r\n      /*Main Content Wrapper: End*/\r\n    );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(LoginComponent);\r\n","export function PostData(type, userData) {\r\n    //Replace BaseUrl with supplied api link\r\n    let BaseUrl = \"https://reqres.in/api/\";\r\n\r\n    return new Promise((resolve, reject) => {\r\n        fetch(BaseUrl + type, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((responseJSON) => {\r\n                resolve(responseJSON);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    })\r\n}","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\nimport { signupSuccess } from \"../../redux/actions/\";\r\n//Includes\r\n\r\nconst unchecked = (val) => val === true;\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLogged: state.isLogged,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signupSuccess: () => {\r\n    dispatch(signupSuccess());\r\n  },\r\n  signupReset: () => {\r\n    dispatch(actions.reset(\"signup\"));\r\n  },\r\n});\r\n\r\nclass SignupComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    //Bind Handler Functions\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // componentDidUpdate(){\r\n  //Handles Form Submission\r\n  handleSubmit(values) {\r\n    //alert(\"Current State is: \" + JSON.stringify(values));\r\n\r\n    //Call successful signup reducer\r\n    this.props.signupSuccess();\r\n    //Then reset signup form fields after successful submission\r\n    this.props.signupReset();\r\n  }\r\n  // }\r\n\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid content-wrapper signup h-100\">\r\n        <div className=\"vertical-center\">\r\n          {/* Form: Start */}{\" \"}\r\n          <Form model=\"signup\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group row text-center\">\r\n              <div className=\"col-12\">\r\n                <h1 className=\"text-center\"> Signup </h1>\r\n                <hr />\r\n              </div>\r\n            </div>{\" \"}\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-12\">\r\n                {/* Email */}\r\n                <Control.text\r\n                  model=\".email\"\r\n                  className=\"input form-control form-control-lg\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  validators={{\r\n                    required,\r\n                    validEmail,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".email\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Email is required\r\n                      </div>\r\n                    ),\r\n                    validEmail: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Invalid email\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-group row mt-3\">\r\n              <div className=\"col-12\">\r\n                {/* Password */}\r\n                <Control.text\r\n                  model=\".password\"\r\n                  className=\"input form-control form-control-lg\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(6),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".password\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <span className=\"fas fa-exclamation-triangle\"></span>\r\n                    ),\r\n                    minLength: \" Password must be greater than 6 characters\",\r\n                    maxLength: \" Password must be 15 characters or less\",\r\n                  }}\r\n                />\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-group row mt-3\">\r\n              <div className=\"col-12\">\r\n                <div className=\"form-check\">\r\n                  <Control.checkbox\r\n                    model=\".agree\"\r\n                    className=\"form-check-input\"\r\n                    name=\"agree\"\r\n                    id=\"agree\"\r\n                    validators={{\r\n                      unchecked,\r\n                    }}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"agree\">\r\n                    I agree with the terms & conditions{\" \"}\r\n                  </label>\r\n                </div>\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".agree\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    unchecked: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        You must agree to the terms & conditions\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>{\" \"}\r\n            {/* Form Buttons */}{\" \"}\r\n            <div className=\"form-group-row\">\r\n              {\" \"}\r\n              {/* Signup */}{\" \"}\r\n              <input\r\n                className=\"btn btn-primary bg-primary btn-block btn-lg mt-3\"\r\n                type=\"submit\"\r\n                value=\"Signup\"\r\n              />{\" \"}\r\n              {/* Cancel Button */}{\" \"}\r\n              <Link to=\"/home\" className=\"btn btn-danger btn-block btn-lg mt-3\">\r\n                Cancel\r\n              </Link>\r\n            </div>{\" \"}\r\n            <div className=\"form-group-row\">\r\n              <div className=\"mt-3\">\r\n                Already have an account ?{\" \"}\r\n                <a\r\n                  href=\"/login\"\r\n                  style={{\r\n                    color: \"#000000\",\r\n                    textDecoration: \"none\",\r\n                    fontSize: \"100%\",\r\n                  }}\r\n                >\r\n                  Login here{\" \"}\r\n                </a>{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </Form>{\" \"}\r\n          {/* Form: End */}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(SignupComponent)\r\n);\r\n","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { registerSuccess } from \"../../redux/actions/\";\r\n//Includes\r\nimport displayImg from \"../../assets/img/display-pics/dp-img.png\";\r\n\r\n//Validation Functions\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst required = (val) => val && val.length;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLogged: state.isLogged,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  registerSuccess: () => {\r\n    dispatch(registerSuccess());\r\n  },\r\n  registerReset: () => {\r\n    dispatch(actions.reset(\"register\"));\r\n  },\r\n});\r\n\r\nclass RegisterComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    //Bind Handler Functions\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //Handles Form Submission\r\n  handleSubmit(event) {\r\n    alert(\"Current State is: \" + JSON.stringify(this.state));\r\n    //Call successful register reducer\r\n    this.props.registerSuccess();\r\n    //Then reset registration form fields after successful registration\r\n    this.props.registerReset();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid content-wrapper register\">\r\n        <div className=\"\">\r\n          {/* Form: Start */}\r\n          <Form\r\n            model=\"register\"\r\n            onSubmit={this.handleSubmit}\r\n            className=\"mx-auto\"\r\n          >\r\n            <div className=\"form-group row text-center\">\r\n              <div className=\"col-12\">\r\n                <h1 className=\"text-center\">Register</h1>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Upload Display Image */}\r\n            <div className=\"form-group row text-center\">\r\n              <div className=\"col-12\">\r\n                <label for=\"dpImg\">\r\n                  <div className=\"img-upload\">\r\n                    <img src={displayImg} alt=\"dp-img\" />\r\n                  </div>\r\n                  <span className=\"img-upload\">Upload Image</span>\r\n                </label>\r\n                <Control.file\r\n                  model=\".dpImg\"\r\n                  id=\"dpImg\"\r\n                  name=\"dpImg\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n              {/*First Name*/}\r\n              <div className=\"col-12 col-md-6\">\r\n                <Control.text\r\n                  model=\".firstname\"\r\n                  className=\"input form-control form-control-md\"\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"First Name\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".firstname\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        First name is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              {/*Last Name*/}\r\n              <div className=\"col-12 col-md-6 mt-3 mt-md-0\">\r\n                <Control.text\r\n                  model=\".lastname\"\r\n                  className=\"input form-control form-control-md\"\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Last Name\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".lastname\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Last name is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n              {/*Date of Birth*/}\r\n              <div className=\"col-12 col-md-6\">\r\n                <Control.text\r\n                  model=\".dob\"\r\n                  className=\"input form-control form-control-md\"\r\n                  id=\"dob\"\r\n                  name=\"dob\"\r\n                  placeholder=\"Date of Birth\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".dob\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        DoB is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              {/*Social Security Number*/}\r\n              <div className=\"col-12 col-md-6 mt-3 mt-md-0\">\r\n                <Control.text\r\n                  model=\".ssn\"\r\n                  className=\"input form-control form-control-md\"\r\n                  id=\"ssn\"\r\n                  name=\"ssn\"\r\n                  placeholder=\"Social Security Number\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row mt-4\">\r\n              {/*Email*/}\r\n              <div className=\"col-12 col-md-6\">\r\n                <Control\r\n                  type=\"email\"\r\n                  model=\".email\"\r\n                  className=\"input form-control form-control-md\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  validators={{\r\n                    required,\r\n                    validEmail,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".email\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Email is required\r\n                      </div>\r\n                    ),\r\n                    validEmail: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Invalid email\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              {/*Telephone*/}\r\n              <div className=\"col-12 col-md-6 mt-3 mt-md-0\">\r\n                <Control\r\n                  model=\".tel\"\r\n                  className=\"input form-control form-control-md\"\r\n                  type=\"tel\"\r\n                  id=\"tel\"\r\n                  name=\"tel\"\r\n                  placeholder=\"Telephone\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".tel\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Telephone number is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row mt-4\">\r\n              <div className=\"col-12 col-md-6\">\r\n                <div className=\"row\">\r\n                  {/* Address Line & City */}\r\n                  <div className=\"col-md-6\">\r\n                    {/*Address Line*/}\r\n                    <Control.text\r\n                      model=\".addressline\"\r\n                      className=\"input form-control form-control-md\"\r\n                      id=\"addressline\"\r\n                      name=\"addressline\"\r\n                      placeholder=\"Address Line\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".addressline\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            Address line is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    {/*City*/}\r\n                    <Control.text\r\n                      model=\".city\"\r\n                      className=\"input form-control form-control-md mt-3 mt-md-0\"\r\n                      id=\"city\"\r\n                      name=\"city\"\r\n                      placeholder=\"City\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".city\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            City is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*Zip & State*/}\r\n              <div className=\"col-12 col-md-6 mt-3 mt-md-0\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    {/*Zip Code*/}\r\n                    <Control.text\r\n                      model=\".zipcode\"\r\n                      className=\"input form-control form-control-md\"\r\n                      id=\"zipcode\"\r\n                      name=\"zipcode\"\r\n                      placeholder=\"Zip Code\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".zipcode\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            Zip code is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    {/*State*/}\r\n                    <Control.text\r\n                      model=\".state\"\r\n                      className=\"input form-control form-control-md mt-3 mt-md-0\"\r\n                      id=\"state\"\r\n                      name=\"state\"\r\n                      placeholder=\"State\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".state\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            State is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row row-5 mt-4\">\r\n              <div className=\"col-12 col-md-6\">\r\n                {/*Country*/}\r\n                <Control.text\r\n                  model=\".country\"\r\n                  className=\"input form-control form-control-md mt-0\"\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  placeholder=\"Country\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".country\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Country is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {/*Service Cateogry*/}\r\n                <Control.select\r\n                  model=\".servicecategory\"\r\n                  className=\"input custom-select form-control form-control-md\"\r\n                  id=\"servicecategory\"\r\n                  validators={{\r\n                    required,\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected disabled hidden>\r\n                    Service Category\r\n                  </option>\r\n                  <option value=\"Massage\">Massge</option>\r\n                  <option value=\"\"></option>\r\n                </Control.select>\r\n                <Errors\r\n                  className=\"text-danger text-center\"\r\n                  model=\".servicecategory\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: (\r\n                      <div>\r\n                        <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                        Service cateogry is required\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row row-5 mt-4\">\r\n              <div className=\"col-12 col-md-6\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <Control.select\r\n                      model=\".firstday\"\r\n                      className=\"input custom-select form-control form-control-md\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    >\r\n                      <option value=\"\" selected disabled hidden>\r\n                        First Day\r\n                      </option>\r\n                      <option value=\"Monday\">Monday</option>\r\n                      <option value=\"Tuesday\">Tuesday</option>\r\n                      <option value=\"Wednesday\">Wednesday</option>\r\n                      <option value=\"Thursday\">Thursday</option>\r\n                      <option value=\"Friday\">Friday</option>\r\n                      <option value=\"Saturday\">Saturday</option>\r\n                      <option value=\"Sunday\">Sunday</option>\r\n                    </Control.select>\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".firstday\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            First working day is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <Control.select\r\n                      model=\".lastday\"\r\n                      className=\"input custom-select form-control form-control-md\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    >\r\n                      <option value=\"\" selected disabled hidden>\r\n                        Last Day\r\n                      </option>\r\n                      <option value=\"Monday\">Monday</option>\r\n                      <option value=\"Tuesday\">Tuesday</option>\r\n                      <option value=\"Wednesday\">Wednesday</option>\r\n                      <option value=\"Thursday\">Thursday</option>\r\n                      <option value=\"Friday\">Friday</option>\r\n                      <option value=\"Saturday\">Saturday</option>\r\n                      <option value=\"Sunday\">Sunday</option>\r\n                    </Control.select>\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".lastday\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            Last working day is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-md-6\">\r\n                {/*Working Hours*/}\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6\">\r\n                    {/* Opening Hours */}\r\n                    <Control\r\n                      type=\"time\"\r\n                      model=\".openingtime\"\r\n                      className=\"input form-control form-control-md mt-0\"\r\n                      id=\"openingtime\"\r\n                      name=\"openingtime\"\r\n                      placeholder=\"Opening Time\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".openingtime\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            Opening time is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-12 col-md-6\">\r\n                    {/* Closing Hour */}\r\n                    <Control\r\n                      type=\"time\"\r\n                      model=\".closingtime\"\r\n                      className=\"input form-control form-control-md mt-0\"\r\n                      id=\"closingtime\"\r\n                      name=\"closingtime\"\r\n                      placeholder=\"Closing Time\"\r\n                      validators={{\r\n                        required,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger text-center\"\r\n                      model=\".closingtime\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: (\r\n                          <div>\r\n                            <span className=\"fas fa-exclamation-triangle\"></span>{\" \"}\r\n                            Closing time is required\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group btn-block text-right mt-4\">\r\n              {/* Register Button */}\r\n              <input\r\n                className=\"btn btn-primary  btn-lg bg-primary ml-md-1\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n\r\n              {/* Cancel Button */}\r\n              <Link\r\n                to=\"/home\"\r\n                className=\"btn btn-danger btn-lg ml-md-1\"\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {/* Form: End */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(RegisterComponent)\r\n);\r\n","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n//Includes\r\n//Profile Picture Dimension: 512x512\r\nimport avatar from \"../../assets/img/display-pics/user-avatar.png\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLogged: state.isLogged,\r\n});\r\n\r\nclass UserProfile extends Component {\r\n  userProfile = [\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      category: \"Massage Therapist\",\r\n      address: \"1201 Prince Street, Wecost Lane Brooklyn, NY, USA\",\r\n      hours: \"8:00AM to 6:00PM\",\r\n      days: \"Monday to Friday\",\r\n      www: \" www.massagetherapist.com\",\r\n      bio: \"Bachelor of Arts, Degree in Therapy\",\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    return (\r\n      <div className=\"container-fluid content-wrapper userProfile\">\r\n        <div id=\"appointmentModal\" className=\"modal fade\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              {/* Modal Header */}\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Book Appointment</h4>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n\r\n              {/* Modal Body */}\r\n              <div className=\"modal-body\">\r\n                {/* Form: Start */}\r\n                <form action=\"\" method=\"\">\r\n                  <div className=\"form-group row\">\r\n                    {/* First Name */}\r\n                    <div className=\"col-12\">\r\n                      <input\r\n                        className=\"input form-control form-control-md\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* Last Name */}\r\n                    <div className=\"col-12 mt-2\">\r\n                      <input\r\n                        className=\"input form-control form-control-md\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* Email */}\r\n                    <div className=\"col-12 mt-2\">\r\n                      <input\r\n                        className=\"input form-control form-control-md\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* Tel */}\r\n                    <div className=\"col-12 mt-2\">\r\n                      <input\r\n                        className=\"input form-control form-control-md\"\r\n                        id=\"tel\"\r\n                        name=\"tel\"\r\n                        type=\"tel\"\r\n                        placeholder=\"Telephone\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* Appointment Date */}\r\n                    <div className=\"col-12 mt-4\">\r\n                      <label htmlFor=\"appointmentDate\">Appointment Date</label>\r\n                      <input\r\n                        className=\"input form-control form-control-md\"\r\n                        id=\"appointmentDate\"\r\n                        name=\"appointmentDate\"\r\n                        type=\"date\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Buttons: Book Appointment , Cancel */}\r\n\r\n                  <div className=\"btn-group btn-block text-right\">\r\n                    {/* Book Appointment Button */}\r\n                    <input\r\n                      className=\"btn btn-primary ml-md-1 w-100\"\r\n                      type=\"submit\"\r\n                      value=\"Book Appointment\"\r\n                    />\r\n\r\n                    {/* Cancel Button */}\r\n                    <input\r\n                      className=\"btn btn-danger ml-md-1 w-100\"\r\n                      type=\"button\"\r\n                      value=\"Cancel\"\r\n                      data-dismiss=\"modal\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n                {/* Form: End */}\r\n              </div>\r\n\r\n              {/* Modal Footer */}\r\n              <div className=\"modal-footer\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 heading\">\r\n              <h1 className=\"text-center\">Profile</h1>\r\n              <hr />\r\n            </div>\r\n            <div className=\"col-12 service-category\">\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={avatar}\r\n                alt=\"service-category\"\r\n              />\r\n              <p>Massage Therapist</p>\r\n            </div>\r\n\r\n            <div className=\"row mx-auto\">\r\n              <div className=\"col-12 profile-details\">\r\n                {/* Web Address */}\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-12 web-address mt-3\">\r\n                    <div className=\"row flex-nowrap\">\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-link mr-2\"> </span>\r\n                      </div>\r\n                      <div className=\"col-8\">\r\n                        <ul className=\"list-unstyled\">\r\n                          <li>\r\n                            <a href=\"/\" target=\"blank\"> www.massagetherapist.com </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-edit mr-2\"> </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                {/* Physical Address/Location */}\r\n                <div className=\"row mt-1\">\r\n                  <div className=\"col-12 location\">\r\n                    <div className=\"row flex-nowrap\">\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-search-location mr-2\"> </span>\r\n                      </div>\r\n                      <div className=\"col-8\">\r\n                        <ul className=\"list-unstyled\">\r\n                          <li>\r\n                            1201 Prince Street, Wecost Lane Brooklyn, NY, USA\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-edit mr-2\"> </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                {/* Working Hours */}\r\n                <div className=\"row mt-1\">\r\n                  <div className=\"col-12 schedule\">\r\n                    <div className=\"row flex-nowrap\">\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-clock mr-2\"> </span>\r\n                      </div>\r\n                      <div className=\"col-8\">\r\n                        <ul className=\"list-unstyled\">\r\n                          <li>\r\n                            <span className=\"font-weight-bold\">Days: </span>\r\n                            Monday to Friday\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"font-weight-bold\">Hours: </span>8:\r\n                            00 AM to 6: 00 PM\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-edit mr-2\"> </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                {/* Bio */}\r\n                <div className=\"row mt-1\">\r\n                  <div className=\"col-12 bio\">\r\n                    <div className=\"row flex-nowrap\">\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-info-circle mr-2\"> </span>\r\n                      </div>\r\n                      <div className=\"col-8\">\r\n                        <ul className=\"list-unstyled\">\r\n                          <li>Bachelor of Arts</li>\r\n                          <li>Degree in Therapy</li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <span className=\"fas fa-edit mr-2\"> </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                {/* Book Appointment */}\r\n                <div className=\"row mt-1\">\r\n                  <div className=\"col-12\">\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-block btn-lg\"\r\n                      value=\"Book An Appointment\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#appointmentModal\"\r\n                    />{\" \"}\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-1 text-center mt-3\">\r\n                  <div className=\"col-12 mb-3\">\r\n                    <a href=\"tel:+1234567\">\r\n                      <span className=\"fas fa-phone-alt\"> </span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(UserProfile));\r\n","//Imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../../components/LoadingComponent\";\r\nimport * as mmApiCall from \"mmApi/mmApi\";\r\n//Includes\r\n//Profile Picture Dimension: 512x512\r\nimport avatar from \"../../assets/img/display-pics/user-avatar.png\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n  switch(state.selectCategory.state){\r\n    case undefined:\r\n      return {serviceCategoryId: undefined};\r\n      default:\r\n        return{\r\n          serviceCategoryId: state.selectCategory.state \r\n        }\r\n  }\r\n}\r\n\r\nclass ServiceListing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoading: true,\r\n      services: [],\r\n      serviceCat: [],\r\n      value: \"\",\r\n      searchResult: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleOnLoad = this.handleOnLoad.bind(this);\r\n  }\r\n\r\n  //Fetch Service Categories\r\n  async fetchServiceCategories() {\r\n    try {\r\n      const data = await mmApiCall.getServiceCategory();\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n          serviceCat: data,\r\n        });\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Fetch Services By Service Category ID\r\n  async fetchServicesByCatId() {\r\n    try {\r\n      const data = await mmApiCall.getServicesbyCategoryId(\r\n        `${this.state.value}`\r\n      );\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n          services: data,\r\n        });\r\n        console.log(this.state.services);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleOnLoad = () => {\r\n    //If A Service Category ID Was Passed To This Component\r\n    if (this.props.serviceCategoryId !== undefined) {\r\n      this.setState(\r\n        {\r\n          value: this.props.serviceCategoryId,\r\n          searchResult: true,\r\n        },\r\n        () => {\r\n          //Then Fetch Services With That Cat. ID\r\n          this.fetchServicesByCatId();\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Reset Service Category ID On Page Load/Reload\r\n    this.setState({\r\n      serviceCategoryId: \"\",\r\n    });\r\n\r\n    //Fetch Services Categories First To Populate Dropdown Menu\r\n    this.fetchServiceCategories();\r\n\r\n    //Then Call The Following Function\r\n    this.handleOnLoad();\r\n  }\r\n\r\n  //Handle Select Option\r\n  handleChange = (event) => {\r\n    //Change The Following State Values Upon Category Selection\r\n    this.setState(\r\n      {\r\n        value: event.target.value,\r\n        searchResult: true,\r\n        //Then Perform A Fetch Operation As A Callback\r\n      },\r\n      () => {\r\n        this.fetchServicesByCatId();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      isLoading,\r\n      services,\r\n      serviceCat,\r\n      searchResult,\r\n      value,\r\n    } = this.state;\r\n\r\n    // Create A New Array Based On The Selected Service Category\r\n    const filteredItems = services.filter(\r\n      (a) => a.serviceCategoryObjectId === value\r\n    );\r\n\r\n    // In The Event Of An Error, Display The Following Message\r\n    if (error) {\r\n      return (\r\n        <div className=\"content-wrapper text-center mt-5\">\r\n          <p>\r\n            <span className=\"font-weight-bold\">Network Error: </span>Something\r\n            went wrong. The operation could not be completed.\r\n          </p>\r\n        </div>\r\n      );\r\n      // Show Loading Icon Until All The Data Has Been Fetched\r\n    } else if (isLoading) {\r\n      return (\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"vertical-center\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid content-wrapper mt-5 mb-5\">\r\n          {/* Selection Option: Start */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <select\r\n                className=\"form-control form-control-lg\"\r\n                onChange={this.handleChange}\r\n              >\r\n                <option defaultValue hidden>\r\n                  Select Category\r\n                </option>\r\n                {serviceCat.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.name.charAt(0).toUpperCase() + item.name.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {/* Show Search Result Until A Category Has Been Selected */}\r\n              {searchResult && (\r\n                <p className=\"mt-2\">\r\n                  Search results:{\" \"}\r\n                  <span className=\"font-weight-bold\">\r\n                    {\" \"}\r\n                    {filteredItems.length}\r\n                  </span>\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Selection Option: End */}\r\n\r\n          {/* Profile Card: Start */}\r\n          <div className=\"row text-center\">\r\n            {services.map((item) => (\r\n              <div className=\"col-12 col-md-3 mt-3\" key={item.id}>\r\n                <div className=\"card\">\r\n                  <div className=\"image-bg\">\r\n                    <img src={avatar} alt=\"\" width=\"75%\" />\r\n                  </div>\r\n                  <div className=\"name mt-2\">{item.name}</div>\r\n                  {/* <p className=\"title\">{item.serviceName.toUpperCase()}</p> */}\r\n                  <p className=\"title\">Service Name</p>\r\n                  <div className=\"text-justify profile-details mt-1\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-2 d-none d-md-block\">\r\n                        <span className=\"fas fa-link\"></span>\r\n                      </div>\r\n                      <div className=\"col-10\">\r\n                        <a className=\"profile-details\" href={item.webPagelink}>\r\n                          {item.webPagelink}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-justify profile-details mt-1\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-2 d-none d-md-block\">\r\n                        <span className=\"fas fa-phone-alt\"></span>\r\n                      </div>\r\n                      <div className=\"col-10\">{item.contact}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-3\">\r\n                    <button className=\"my-btn\">View Profile</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* Profile Card: End */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ServiceListing);\r\n","//Imports\r\nimport React from \"react\";\r\n//Includes\r\nimport fbIcon from \"../../assets/img/social-media-icons/white/facebook-icon.png\";\r\nimport twitterIcon from \"../../assets/img/social-media-icons/white/twitter-icon.png\";\r\nimport igIcon from \"../../assets/img/social-media-icons/white/instagram-icon.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"page-footer text-center\">\r\n      <div className=\"social-items\">\r\n        <a href=\"/\">\r\n          <img className=\"social-link\" src={fbIcon} alt=\"facebook-icon\" />\r\n        </a>\r\n        <a href=\"/\">\r\n          <img  className=\"social-link\" src={twitterIcon} alt=\"twitter-icon\"/>\r\n        </a>\r\n        <a href=\"/\">\r\n          <img className=\"social-link\" src={igIcon} alt=\"instagram-icon\"/>\r\n        </a>\r\n      </div>\r\n      <small>Copyright &copy; 2020, Minute Man. All Rights Reserved.</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","//Imports\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Home from \"./routes/Home\";\nimport Login from \"./routes/Login\";\nimport Signup from \"./routes/Signup\";\nimport Register from \"./routes/Register\";\nimport UserProfile from \"./routes/UserProfile\";\nimport Services from \"./routes/Services\";\nimport Footer from \"./components/Footer/Footer\";\n//Includes\nimport \"./assets/css/App.css\";\nimport \"./assets/js/main\";\n\n\nfunction App() {\n  return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route\n            exact\n            path=\"/services\"\n            component={Services}\n          />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={UserProfile} />\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const LoginInitialStates = {\r\n    isLoggedIn: false,\r\n    userEmail: \"\",\r\n}\r\n\r\nexport const SignupInitialStates = {\r\n    userEmail: \"\",\r\n    userPassword: \"\"\r\n}\r\n\r\nexport const RegisterInitialStates = {\r\n    img: null,\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    dob: \"\",\r\n    ssn: \"\",\r\n    email: \"\",\r\n    tel: \"\",\r\n    addressline: \"\",\r\n    city: \"\",\r\n    zipcode: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    servicecategory: \"\",\r\n    firstday: \"\",\r\n    lastday: \"\",\r\n    openingtime: \"\",\r\n    closingtime: \"\",\r\n\r\n}","import * as types from \"../actions/types\";\r\nimport { LoginInitialStates } from \"../forms\";\r\n\r\nconst isloggedInReducer = (state = LoginInitialStates.isLoggedIn, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN_SUCCESS:\r\n            return ({...state }, !state);\r\n        case types.LOGIN_FAIL:\r\n            return {...state, state };\r\n        case types.LOGOUT:\r\n            return ({...state }, !state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isloggedInReducer;","import * as types from \"../actions/types\";\r\nimport { SignupInitialStates } from \"../forms\";\r\n\r\nconst signup = (state = { SignupInitialStates }, action) => {\r\n    switch (action.type) {\r\n        case types.SIGNUP_SUCCESS:\r\n            return state;\r\n        case types.SIGNUP_FAIL:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default signup;","import * as types from \"../actions/types\";\r\nimport { RegisterInitialStates } from \"../forms\";\r\n\r\nconst register = (state = { RegisterInitialStates }, action) => {\r\n    switch (action.type) {\r\n        case types.REGISTER_SUCCESS:\r\n            return state;\r\n        case types.REGISTER_FAIL:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default register;","import * as types from \"../actions/types\";\r\n\r\nconst initialStates = {\r\n    selectedCategory: \"\"\r\n}\r\n\r\nconst selectCategory = (state = { initialStates }, action) => {\r\n    switch (action.type) {\r\n        case types.SELECT_CATEGORY:\r\n            return ({...state }, { state: action.payload.message });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default selectCategory;","import isLoggedIn from \"./isLoggedIn\";\r\nimport signup from \"./signup\";\r\nimport register from \"./register\"\r\nimport selectCategory from \"./selectCategory\";\r\nimport { LoginInitialStates } from \"../forms\";\r\nimport { SignupInitialStates } from \"../forms\";\r\nimport { RegisterInitialStates } from \"../forms\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createForms } from 'react-redux-form';\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    isLoggedIn: isLoggedIn,\r\n    ...createForms({\r\n        login: LoginInitialStates\r\n    }),\r\n\r\n    signup: signup,\r\n    ...createForms({\r\n        signup: SignupInitialStates\r\n    }),\r\n\r\n    register: register,\r\n    ...createForms({\r\n        register: RegisterInitialStates\r\n    }),\r\n\r\n    selectCategory: selectCategory\r\n})\r\n\r\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user-avatar.938db03e.png\";","module.exports = __webpack_public_path__ + \"static/media/slide1.28030290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.5a90bf6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.42a2b697.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dp-img.d2d62a71.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook-icon.577a1544.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter-icon.ee81209e.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram-icon.4168fcd9.png\";"],"sourceRoot":""}